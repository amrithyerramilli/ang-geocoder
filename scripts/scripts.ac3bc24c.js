"use strict";angular.module("angGeocoderApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","uiGmapgoogle-maps"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/details",{templateUrl:"views/details.html",controller:"DetailsCtrl",controllerAs:"details"}).otherwise({redirectTo:"/"})}]).config(["uiGmapGoogleMapApiProvider",function(a){a.configure({v:"3.20",libraries:"weather,geometry,visualization"})}]),angular.module("angGeocoderApp").controller("MainCtrl",["$scope","$log","$rootScope","utils","$location",function(a,b,c,d,e){function f(){c.geocodedData=null,a.parsedCsv=d.processData(a.uploadedFile),d.validateSchema(a.parsedCsv)?(b.info("validation successful. generating geocoded lat/lon"),a.showValidationErrors=!1,d.generateGeocodes(a.parsedCsv).then(function(){b.info("aal izz well, going to next step"),c.geocodedData=a.parsedCsv,e.path("/details"),e.url("/details")},function(a){b.error("oops, geocode fail macha"),b.error(a)})):(a.showValidationErrors=!0,b.log(a.parsedCsv),b.log("validation failed."))}c.currentStep=1,a.uploadedFile=null,a.uploadFile=f,a.showValidationErrors=!1,a.uploadDisabled=!0,a.$watch("uploadedFile",function(b,c,d){b?a.uploadDisabled=!1:a.uploadDisabled=!0})}]),angular.module("angGeocoderApp").controller("AboutCtrl",["$rootScope",function(a){a.currentStep=3,this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("angGeocoderApp").directive("fileReader",function(){return{restrict:"A",scope:{fileReader:"="},link:function(a,b,c){b.bind("change",function(b){if(b.target.files.length>0){var c=new FileReader;c.onload=function(b){a.$apply(function(){a.fileReader=b.target.result})},c.readAsText(b.target.files[0])}})}}}),angular.module("angGeocoderApp").factory("geocoder",["$q","uiGmapGoogleMapApi",function(a,b){function c(b){var c=a.defer();return d.geocode({address:b},function(a,b){if(b===google.maps.GeocoderStatus.OK){var d={latitude:a[0].geometry.location.lat(),longitude:a[0].geometry.location.lng()};c.resolve(d)}else c.reject("geocode failed because : "+b)}),c.promise}var d=null;return b.then(function(a){d=new google.maps.Geocoder}),{geocode:c}}]),angular.module("angGeocoderApp").factory("utils",["$q","$log","geocoder",function(a,b,c){function d(a){var b=this;b.id=a[0],b.firstName=a[1],b.lastName=a[2],b.houseNumber=a[3],b.streetName=a[4],b.city=a[5],b.country=a[6],b.addressString=[b.houseNumber,b.streetName,b.city,b.country].join(" "),b.isInvalid=!1,b.validationMessage=""}function e(a){for(var b=["id","houseNumber","streetName","city","country"],c=0;c<b.length;c++){var d=b[c];if(!a[d])return a.isInvalid=!0,a.validationMessage=d+" is required",!1}return!0}function f(a){for(var b=!0,c=0;c<a.length;c++){var d=a[c];if(!e(d)){b=!1;break}}return b}function g(a){for(var b=",",c=a.split(/\r\n|\n/),e=[],f=1;f<c.length;f++){var g=c[f].split(b);e.push(new d(g))}return e}function h(b){var d=b.map(function(a){var d=c.geocode(a.addressString);return d.then(function(b){a.coordinates=b},function(c){a.coordinates=b})});return a.all(d)}function i(a){var b=",",c=["Id","First Name","Last Name","Address","Latitude","Longitude"],d="";d+=c.join(b)+"\n";for(var e=0;e<a.length;e++){var f=a[e];d+=[f.id,f.firstName,f.lastName,f.addressString,f.coordinates.latitude,f.coordinates.longitude].join(b)+"\n"}return d}return{processData:g,validateSchema:f,generateGeocodes:h,convertToCsv:i}}]),angular.module("angGeocoderApp").controller("DetailsCtrl",["$rootScope","$scope","uiGmapGoogleMapApi","utils",function(a,b,c,d){function e(){var a=d.convertToCsv(b.detailsData),c=angular.element("<a/>");c.attr({href:"data:attachment/csv;charset=utf-8,"+encodeURI(a),target:"_blank",download:"downloaded geocodes.csv"})[0].click()}a.currentStep=2,b.isValid=null!=a.geocodedData,b.myInfoWindow=null,c.then(function(c){b.detailsData=a.geocodedData,b.myInfoWindow=new google.maps.InfoWindow}),b.map={center:{latitude:45,longitude:-73},zoom:8},b.markerOptions={draggable:!0},b.showMarkerInfo=function(a,b,c){c.show=!c.show},b.downloadFile=e}]),angular.module("angGeocoderApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/details.html",'<div class="alert alert-danger" role="alert" ng-if="!isValid">Uh oh, looks like you skipped step 1. Please upload the file in <a href="#/">step 1</a></div> <div class="row"> <div class="col-md-6"> <table class="table table-bordered table-hover table-condensed"> <thead> <tr> <th ng-repeat="header in parsedCsv[0]">{{header}}</th> </tr> </thead> <tbody> <tr ng-repeat="row in detailsData track by $index"> <td ng-repeat="col in row track by $index" ng-if="[0, 1, 2, 7, 10].indexOf($index) > -1">{{ col }}</td> </tr> </tbody> </table> <button class="btn btn-success" ng-click="downloadFile()" ng-if="isValid">Download</button> </div> <div class="col-md-6"> <ui-gmap-google-map center="map.center" zoom="map.zoom" ng-if="isValid"> <ui-gmap-markers models="detailsData" coords="\'coordinates\'" idkey="\'id\'" fit="true" icon="\'icon\'" options="markerOptions" click="showMarkerInfo"> <ui-gmap-windows show="show"> <div ng-non-bindable>info - {{id}}</div> </ui-gmap-windows> </ui-gmap-markers> </ui-gmap-google-map> </div> </div>'),a.put("views/main.html",'<div class="panel panel-default text-center col-md-6 col-md-offset-3"> <div class="panel-body"> <input type="file" file-reader="uploadedFile"> <hr> <button class="btn btn-success" ng-disabled="uploadDisabled" ng-click="uploadFile()">Upload</button> </div> </div> <div class="panel panel-default col-md-6 col-md-offset-3" ng-if="showValidationErrors"> <div class="panel-body"> <table class="table"> <!-- <thead>\r\n                <tr>\r\n                    <th ng-repeat="header in parsedCsv[0]">{{header}}</th>\r\n                </tr>\r\n            </thead> --> <tbody> <tr ng-repeat="row in parsedCsv track by $index" ng-class="{\'warning\' : row.isInvalid}"> <td ng-repeat="col in row track by $index" ng-if="$index != 7 && $index != 8">{{ col }}</td> </tr> </tbody> </table> </div> </div>')}]);